// PROBLEM # 2

// Each new term in the Fibonacci sequence is generated by adding the previous two terms.
// By starting with 1 and 2, the first 10 terms will be:

// 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

// By considering the terms in the Fibonacci sequence whose values do not exceed four million,
// find the sum of the even - valued terms.;

const evenFibonacciNumbers = (term: number): number => {
	const maxFibSequence = 4000000;
	let n = term;
	let sum = 0;
	let a = 1;
	let b = 2;

	while (1 < n) {
		if (b > maxFibSequence) break;
		if (b % 2 === 0) sum += b;
		[a, b] = [b, a + b];
		n--;
	}

	console.log(`Input: ${term}, Output: ${sum}`);
	return sum;
};

evenFibonacciNumbers(-50); // 0
evenFibonacciNumbers(5); // 10
evenFibonacciNumbers(10); // 44
evenFibonacciNumbers(24); // 60696
evenFibonacciNumbers(38); // 4613732
